package Day04;

import java.util.Random;
import java.util.Scanner;

public class Day04_6 {

	public static void main(String[] args) {
		
		//틱택토 게임
			// 1. 9칸 생성
				// 1. string 배열 = new string[9]
		
			// 2. 사용자에게 0~8 인덱스번호 입력받기
				// 1. 해당 인덱스에 O 표시
				// 2. 이미 둔 자리는 재입력
		
			// 3. 컴퓨터는 0~9 사이 난수 발생
				// 1. 해당 인덱스에 X 표시
				// 2. 이미 둔 자리는 재난수 생성
		
			// 4. 승리판단
				// 가로 인덱스들의 모양이 모두 동일하면
				// 012 345 678
				// 세로 인덱스들의 모양이 모두 동일하면
				// 036 147 258
				// 대각선 인덱스들의 모양이 모두 동일하면
				// 048 246
		
		
		// 사용자가 둘때 삼목을 만들었지만 ai는 여전히 난수를 실행한후 사용자가 승리???????????????
		// 사용자가 삼목을 만들었을때 ai도 만들었다면 ai의 승리?????????????????
		
		//준비
		Scanner sc = new Scanner(System.in);
		Random random = new Random();
		String[] 게임판 = { "[ ]", "[ ]", "[ ]", 
			           	  "[ ]", "[ ]", "[ ]",
			           	  "[ ]", "[ ]", "[ ]"};
		// string 객체 9개를 저장할 수 있는 배열 선언
		String 승리알 = ""; // 3목 되었을때 해당알을 저장하는 변수
		
		// 게임실행
		while(true) { // 무한루프 종료조건 : 1. 9칸 모두 알이 있을경우 2. 승리자가 나왔을경우
			// 게임판 출력 [ 배열내 모든 인덱스 출력 ]
			for( int i = 0 ; i<게임판.length; i++) {
				System.out.print( 게임판[i] );
				// 인덱스 2 5 8 이면 줄바꿈
				if( i % 3 == 2 ) System.out.println();
			}
			/////////////////// 1. 플레이어 위치(인덱스) 선택///////////////////
			while(true) {
				System.out.println("위치 선택 : "); int 위치 = sc.nextInt();
				if( 게임판[위치].equals("[ ]")) {
				// 선택한 위치가 공백이면 알 두기
				게임판[위치] = "[O]";
				break; // 가장 가까운 반복문 탈출;
				}else {
				System.out.println(" 알림)) 해당 위치에 이미 알이 있습니다. [ 재 선택 ] ");
				}
			} // while2 end
			/////////////////// 2. 컴퓨터 난수(인덱스) 선택///////////////////
			while(true) {
				int 위치 = random.nextInt(9); // 0~8 사이의 난수 int 형으로 가져오기
				if( 게임판[위치].equals("[ ]") ) { // 3. 해당 난수위치가 공백이면
					// 난수 위치에 공백이면 X 알 두기
					게임판[위치] = "[X]"; break; // 4. 알을 두었으면 반복문 탈출
				}
			} // while2 end [ 난수가 공백위치를 생성했을 경우에 break; ]
			/////////////////// 3. 승리자 판단 ////////////////////////////
			// 1. 가로로 이기는 수 3
			for( int i =0 ; i<=6; i+=3 ) {
				//* i는 0부터 6까지 3씩증가 -> 0 3 6 -> 3회
				if( 게임판[i].equals(게임판[i+1]) && 게임판[i+1].equals(게임판[i+2])) {
					// 0 인덱스 == 1 인덱스 이면서 1 3인덱스 == 2 인덱스
					승리알 = 게임판[i];
				}
			}
			
			// 2. 세로로 이기는 수 3
			for( int i = 0 ; i<=2; i++ ) { // * i는 0부터 2까지 1씩증가 -> 0 1 2 -> 3회 반복
				if( 게임판[i].equals(게임판[i+3]) && 게임판[i+3].equals(게임판[i+6])) {
					승리알 = 게임판[i];
				}
				
			}
			// 3. 대각선으로 이기는 수 2
			if( 게임판[0].equals(게임판[4]) && 게임판[4].equals(게임판[8])) {
				승리알 = 게임판[0];
			}
			if( 게임판[2].equals(게임판[4]) && 게임판[4].equals(게임판[6])) {
				승리알 = 게임판[2];
			}
			
			/////////////////////// 4. 게임종료 /////////////////////////
			
			if( 승리알.equals("[O]") ) {
				System.out.println(" 알림)) 플레이어 승리");
				break; // 게임종료
			}
			if( 승리알.equals("[X]")) {
				System.out.println(" 알림)) 컴퓨터 승리");
				break; // 게임종료
			}
			
			//////////////// 5. 무승부 //////////////////////
			
			if( !게임판.equals("[ ]") ) {
					System.out.println("무승부");
			} // 무승부 미해결
			
		} // while end [ 게임종료 ]
		// 게임판 출력 [ 배열내 모든 인덱스 출력 ]
					for( int i = 0 ; i<게임판.length; i++) {
						System.out.print( 게임판[i] );
						// 인덱스 2 5 8 이면 줄바꿈
						if( i % 3 == 2 ) System.out.println();
					}
		
	} // m e

}
